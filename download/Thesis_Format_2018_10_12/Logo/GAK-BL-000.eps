%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 433 436
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 433 436
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.2 sc
T soprm
q
4 4 425 428 rc
298.48489 68.586563 m
279.9209 76.711563 278.8009 67.481567 266.77191 65.515564 c
252.3909 63.176563 237.3909 79.787567 237.3909 79.787567 c
237.3909 79.787567 245.5529 77.169563 252.77991 81.467567 c
259.8299 85.664566 279.77689 79.942566 279.77689 79.942566 c
273.4549 85.872566 258.2869 85.024567 247.4059 83.697563 c
237.7869 82.526566 228.41991 92.218567 228.41991 92.218567 c
228.41991 92.218567 232.61591 94.586563 239.2009 96.526566 c
245.78391 98.459564 261.72989 94.204567 261.72989 94.204567 c
261.72989 94.204567 255.74789 98.854568 240.4379 99.574562 c
228.41991 100.13557 226.2639 114.16856 226.2639 114.16856 c
237.41789 113.80457 242.0959 112.72957 248.57091 108.41557 c
252.1749 106.00757 260.19589 104.57556 260.19589 104.57556 c
240.1629 111.32456 235.08389 136.66856 235.08389 136.66856 c
235.08389 136.66856 253.4389 135.51256 263.6839 110.93056 c
263.6839 110.93056 255.8409 128.25957 267.61292 143.30656 c
267.61292 143.30656 268.94989 137.77356 271.23889 133.85356 c
273.5289 129.92856 276.4129 123.73457 274.8349 116.33057 c
273.39389 109.54857 278.64691 101.34956 278.64691 101.34956 c
278.64691 101.34956 275.4949 120.56457 281.38489 126.77657 c
287.27191 132.99156 288.23489 142.67957 288.23489 142.67957 c
288.23489 142.67957 298.60089 123.78657 294.35089 115.28056 c
290.0979 106.77856 288.13589 92.514565 293.6019 86.265564 c
293.6019 86.265564 291.1929 108.17857 297.86191 114.52856 c
305.41989 121.72456 306.2529 126.63056 306.2529 126.63056 c
306.2529 126.63056 319.61789 116.29456 310.3269 98.821564 c
304.5369 87.931564 306.4549 84.941566 305.7139 81.086563 c
304.3399 73.968567 301.7579 70.874565 298.48489 68.586563 c
f
134.4019 68.586563 m
152.9689 76.711563 154.0909 67.481567 166.1199 65.515564 c
180.5009 63.176563 195.4989 79.787567 195.4989 79.787567 c
195.4989 79.787567 187.3369 77.169563 180.1109 81.467567 c
173.05991 85.664566 153.1149 79.942566 153.1149 79.942566 c
159.4379 85.872566 174.6039 85.024567 185.48489 83.697563 c
195.1049 82.526566 204.4649 92.218567 204.4649 92.218567 c
204.4649 92.218567 200.2719 94.586563 193.6899 96.526566 c
187.10789 98.459564 171.1619 94.204567 171.1619 94.204567 c
171.1619 94.204567 177.1409 98.854568 192.4549 99.574562 c
204.4649 100.13557 206.62489 114.16856 206.62489 114.16856 c
195.4749 113.80457 190.7959 112.72957 184.31889 108.41557 c
180.7169 106.00757 172.6949 104.57556 172.6949 104.57556 c
192.72591 111.32456 197.80791 136.66856 197.80791 136.66856 c
197.80791 136.66856 179.4519 135.51256 169.20889 110.93056 c
169.20889 110.93056 177.0519 128.25957 165.27789 143.30656 c
165.27789 143.30656 163.9409 137.77356 161.6539 133.85356 c
159.3629 129.92856 156.4769 123.73457 158.05389 116.33057 c
159.49789 109.54857 154.2429 101.34956 154.2429 101.34956 c
154.2429 101.34956 157.3959 120.56457 151.5069 126.77557 c
145.6199 132.99156 144.65691 142.67957 144.65691 142.67957 c
144.65691 142.67957 134.28889 123.78657 138.54089 115.28056 c
142.7939 106.77856 144.75591 92.514565 139.2859 86.265564 c
139.2859 86.265564 141.6969 108.17857 135.0269 114.52856 c
127.4719 121.72456 126.6399 126.63056 126.6399 126.63056 c
126.6399 126.63056 113.2719 116.29456 122.5639 98.821564 c
128.35291 87.931564 126.4329 84.941566 127.1789 81.086563 c
128.5529 73.968567 131.1339 70.874565 134.4019 68.586563 c
f
170.7399 195.67056 m
179.97791 195.67056 l
179.97791 164.03957 l
170.7399 164.03957 l
h
f
253.96091 195.67056 m
263.1969 195.67056 l
263.1969 164.03957 l
253.96091 164.03957 l
h
f
212.34891 176.30457 m
221.5869 176.30457 l
221.5869 143.64557 l
212.34891 143.64557 l
h
f
188.45889 188.21156 m
197.6949 188.21156 l
197.6949 178.97856 l
188.45889 178.97856 l
h
f
236.2379 188.21156 m
245.47189 188.21156 l
245.47189 178.97856 l
236.2379 178.97856 l
h
f
188.45889 195.67056 m
245.4729 195.67056 l
245.4729 186.44656 l
188.45889 186.44656 l
h
f
188.45889 180.16356 m
245.4729 180.16356 l
245.4729 170.91757 l
188.45889 170.91757 l
h
f
170.7399 166.37556 m
263.1969 166.37556 l
263.1969 157.13756 l
170.7399 157.13756 l
h
f
194.9299 151.43857 m
221.5829 151.43857 l
221.5829 142.20256 l
194.9299 142.20256 l
h
f
239.85789 218.25557 m
195.51891 234.42656 l
195.51891 243.74956 l
239.85789 227.57057 l
239.85789 218.25557 l
f
195.51891 218.25557 m
239.85789 234.42656 l
239.85789 243.74956 l
195.51891 227.57057 l
195.51891 218.25557 l
f
239.85789 243.47656 m
195.51891 259.65356 l
195.51891 268.97858 l
239.85789 252.79657 l
239.85789 243.47656 l
f
195.51891 243.47656 m
239.85789 259.65356 l
239.85789 268.97858 l
195.51891 252.79657 l
195.51891 243.47656 l
f
158.0609 229.82257 m
186.5309 229.82257 l
186.5309 218.28056 l
158.0609 218.28056 l
h
f
158.0609 264.16956 m
186.5309 264.16956 l
186.5309 252.61757 l
158.0609 252.61757 l
h
f
158.0609 246.99457 m
186.5309 246.99457 l
186.5309 235.44957 l
158.0609 235.44957 l
h
f
247.40089 229.82257 m
275.8739 229.82257 l
275.8739 218.28056 l
247.40089 218.28056 l
h
f
247.40089 264.16956 m
275.8739 264.16956 l
275.8739 252.61757 l
247.40089 252.61757 l
h
f
247.40089 246.99457 m
275.8739 246.99457 l
275.8739 235.44957 l
247.40089 235.44957 l
h
f
149.9709 299.51257 m
161.51691 299.51257 l
161.51691 277.50757 l
149.9709 277.50757 l
h
f
149.9709 270.64056 m
161.51691 270.64056 l
161.51691 218.28056 l
149.9709 218.28056 l
h
f
272.41391 270.64056 m
283.96091 270.64056 l
283.96091 218.28056 l
272.41391 218.28056 l
h
f
272.41391 299.51257 m
283.96091 299.51257 l
283.96091 277.50757 l
272.41391 277.50757 l
h
f
190.7869 299.51257 m
202.3349 299.51257 l
202.3349 277.50757 l
190.7869 277.50757 l
h
f
231.5979 299.51257 m
243.1479 299.51257 l
243.1479 277.50757 l
231.5979 277.50757 l
h
f
149.9709 307.15057 m
283.96091 307.15057 l
283.96091 295.60257 l
149.9709 295.60257 l
h
f
149.9709 201.96457 m
161.51691 201.96457 l
161.51691 158.56256 l
149.9709 158.56256 l
h
f
272.41391 201.96457 m
283.96091 201.96457 l
283.96091 158.56256 l
272.41391 158.56256 l
h
f
149.9709 212.58057 m
283.96091 212.58057 l
283.96091 201.03856 l
149.9709 201.03856 l
h
f
211.18491 320.38657 m
222.73689 320.38657 l
222.73689 299.75458 l
211.18491 299.75458 l
h
f
317.8309 90.220566 m
315.40689 91.957565 l
315.40689 91.957565 324.9339 107.21356 319.0419 122.63156 c
313.1449 138.06557 306.73489 141.69656 304.65091 145.69656 c
304.65091 145.69656 326.31989 148.28456 328.22989 124.02056 c
328.22989 124.02056 327.67191 140.72656 333.73792 146.43956 c
333.73792 146.43956 343.28989 136.08856 340.27789 124.08656 c
336.88391 110.55157 327.5289 109.28457 324.75891 103.21957 c
321.98291 97.159569 317.8309 90.220566 317.8309 90.220566 c
f
355.97589 133.24457 m
355.97589 133.24457 370.96091 147.72156 370.4429 159.64957 c
369.90991 171.57457 368.56189 193.87756 381.8949 200.87857 c
381.8949 200.87857 389.44589 191.61256 387.47589 180.72656 c
385.5159 169.82356 382.8349 171.01256 386.14291 163.40256 c
386.14291 163.40256 388.30191 177.85356 394.78391 188.64957 c
401.24789 199.44656 424.06091 214.84256 424.06091 214.84256 c
424.06091 214.84256 429.2439 194.79257 413.41489 177.82556 c
397.57391 160.84256 391.4519 159.98857 391.4519 159.98857 c
391.4519 159.98857 398.7959 158.09857 405.66089 165.30656 c
412.53589 172.51256 417.75491 174.75256 422.73691 176.13057 c
422.73691 176.13057 421.7699 158.48256 407.41489 150.64456 c
393.06491 142.80156 380.01389 144.55557 373.10089 140.02756 c
366.19189 135.50357 359.84891 130.79356 359.84891 130.79356 c
355.97589 133.24457 l
f
391.0379 193.66156 m
391.0379 193.66156 403.56091 210.07556 418.74289 215.69656 c
418.74289 215.69656 427.34991 228.63057 422.36691 239.84956 c
422.36691 239.84956 414.2699 234.24457 411.77191 226.14957 c
411.77191 226.14957 423.6759 252.36057 413.7009 267.32056 c
413.7009 267.32056 393.08191 243.59656 394.3259 224.89656 c
394.3259 224.89656 394.94589 237.36057 384.34991 242.96857 c
384.34991 242.96857 375.6279 221.78056 382.4819 204.96156 c
382.4819 204.96156 390.27591 205.75757 391.0379 193.66156 c
f
366.38589 180.45956 m
366.38589 180.45956 365.96991 194.03157 372.77591 201.21657 c
372.77591 201.21657 374.7059 233.02556 360.70691 240.97557 c
360.70691 240.97557 354.65289 232.26357 357.2999 218.65556 c
357.2999 218.65556 350.87091 246.64656 327.79391 247.02657 c
327.79391 247.02657 338.0069 219.79657 348.22189 213.35857 c
348.22189 213.35857 331.1969 232.64757 315.3129 230.75656 c
315.3129 230.75656 324.3909 208.43956 340.27789 205.04257 c
356.16791 201.63957 366.38589 180.45956 366.38589 180.45956 c
f
350.87091 158.13156 m
350.87091 158.13156 342.54691 196.72057 320.22989 202.01357 c
320.22989 202.01357 319.85089 179.70656 332.70889 167.97156 c
332.70889 167.97156 313.41791 181.21356 297.15189 172.88957 c
297.15189 172.88957 306.61292 161.91556 320.98291 159.27257 c
335.3609 156.62056 351.24991 140.35257 343.6889 124.84157 c
343.6889 124.84157 347.4689 131.27257 351.6319 131.65457 c
351.6319 131.65457 351.99991 143.29457 360.18289 147.70456 c
367.2489 151.50757 371.93188 187.24657 349.99091 188.75056 c
349.99091 188.75056 354.27789 171.75056 350.87091 158.13156 c
f
297.15189 196.34456 m
297.15189 196.34456 311.90491 195.58557 318.3349 189.15657 c
318.3349 189.15657 319.47189 179.70656 322.8739 175.91656 c
322.8739 175.91656 313.79691 180.08456 307.74591 178.56357 c
307.74591 178.56357 297.90891 189.15657 297.15189 196.34456 c
f
390.40591 248.42856 m
394.6319 244.20757 397.95789 266.68655 396.07391 272.35556 c
394.1839 278.02655 387.25989 278.01956 381.59189 276.13257 c
375.9259 274.24557 375.29691 263.54257 390.40591 248.42856 c
f
297.2179 404.58157 m
303.9299 414.64557 328.69989 416.54657 341.91791 401.43158 c
355.1449 386.32556 349.47391 373.09958 349.47391 373.09958 c
349.47391 373.09958 338.14691 396.39355 328.0679 386.95258 c
317.9949 377.50656 336.88391 369.94858 350.73889 364.91455 c
364.59189 359.87656 406.97491 334.07956 410.5589 299.43057 c
412.44089 281.17056 401.7359 270.46457 401.7359 270.46457 c
401.7359 270.46457 397.33389 286.20355 382.85089 280.54456 c
382.85089 280.54456 355.1499 328.39856 317.9949 357.99057 c
299.91589 372.38956 282.1059 381.91257 297.2179 404.58157 c
f
316.10489 267.32056 m
330.2059 250.65857 356.40091 250.31656 372.77591 259.13257 c
372.77591 259.13257 371.38089 266.41257 374.03491 271.72458 c
379.07489 281.80157 348.8439 323.35956 321.7789 347.28458 c
294.7019 371.21255 267.2269 385.89557 249.3649 362.39755 c
237.3979 346.65756 251.8839 317.68756 282.1059 314.54056 c
282.1059 314.54056 253.1429 337.21255 271.4039 347.91357 c
289.66089 358.61755 300.36591 312.65356 304.1449 297.53857 c
307.92389 282.42856 309.1799 275.50858 316.10489 267.32056 c
f
290.2879 376.24957 m
290.2879 376.24957 261.3259 431.02856 222.29289 422.21356 c
222.29289 422.21356 217.2529 390.73056 290.2879 376.24957 c
f
330.31589 101.29057 m
330.31589 101.29057 323.9299 97.245567 322.64789 88.727562 c
321.3689 80.212563 308.16089 61.887566 266.42291 52.305565 c
224.6759 42.725567 189.96091 26.747564 173.7729 16.313564 c
153.75391 31.219564 l
149.2789 30.368565 l
149.2789 30.368565 172.71091 9.2855654 173.9859 5.8775649 c
173.9859 5.8775649 192.4379 20.270565 216.9659 30.219564 c
241.49989 40.171566 275.7829 46.989567 276.63989 45.704563 c
277.49591 44.426563 289.20789 29.730564 301.98389 28.027565 c
314.7699 26.324566 313.70389 27.813564 313.70389 27.813564 c
313.70389 27.813564 306.03091 30.586565 306.03091 36.338566 c
306.03091 36.338566 317.95789 22.911566 332.87091 36.123566 c
332.87091 36.123566 323.49991 35.273563 320.3089 42.081566 c
320.3089 42.081566 334.79391 33.989567 349.90891 46.768566 c
349.90891 46.768566 334.57391 47.197563 332.22791 58.056564 c
332.22791 58.056564 356.29889 54.227566 374.61591 64.878563 c
392.93591 75.527565 396.27689 93.826569 396.27689 93.826569 c
396.27689 93.826569 387.43091 88.912567 385.06189 86.382568 c
381.44189 82.551567 378.4519 83.829567 378.4519 83.829567 c
378.4519 83.829567 381.5199 88.592567 386.33591 90.643562 c
394.61591 94.172562 406.07489 106.72456 406.71191 115.67156 c
406.71191 115.67156 392.00491 107.96857 386.97391 103.21356 c
383.14191 99.594566 380.58389 100.23257 380.58389 100.23257 c
380.58389 100.23257 410.99789 125.07356 414.19989 146.58357 c
414.19989 146.58357 384.8479 144.53357 368.43591 113.22356 c
368.43591 113.22356 368.01291 117.69856 370.35291 121.95457 c
372.69891 126.22057 372.59589 130.91057 371.3219 135.38057 c
371.3219 135.38057 354.81491 126.23656 356.31589 105.14957 c
356.31589 105.14957 352.0549 109.40356 353.9559 115.14056 c
356.3909 122.49256 356.5369 128.21657 356.5369 128.21657 c
356.5369 128.21657 348.86789 127.10657 343.5459 118.58556 c
338.21991 110.05856 337.2869 103.98357 338.39691 95.292564 c
339.73691 84.763565 333.50989 81.703568 333.50989 81.703568 c
333.50989 81.703568 332.02191 84.262566 332.65289 88.300568 c
333.29691 92.355568 330.31589 101.29057 330.31589 101.29057 c
f
116.1009 90.220566 m
118.5309 91.957565 l
118.5309 91.957565 108.9999 107.21356 114.8939 122.63156 c
120.7869 138.06456 127.1989 141.69656 129.2849 145.69656 c
129.2849 145.69656 107.6089 148.28456 105.7029 124.02056 c
105.7029 124.02056 106.2649 140.72656 100.1959 146.43956 c
100.1959 146.43956 90.646896 136.08856 93.6539 124.08656 c
97.047897 110.55157 106.3999 109.28457 109.1739 103.21957 c
111.9479 97.159569 116.1009 90.220566 116.1009 90.220566 c
f
77.957901 133.24457 m
77.957901 133.24457 62.971901 147.72156 63.485901 159.64957 c
64.020897 171.57457 65.372902 193.87756 52.038898 200.87857 c
52.038898 200.87857 44.483898 191.61256 46.454899 180.72656 c
48.4189 169.82356 51.0989 171.01256 47.787899 163.40256 c
47.787899 163.40256 45.6269 177.85356 39.148899 188.64957 c
32.683899 199.44557 9.8748999 214.84256 9.8748999 214.84256 c
9.8748999 214.84256 4.6898999 194.79257 20.5219 177.82556 c
36.356899 160.84256 42.481899 159.98857 42.481899 159.98857 c
42.481899 159.98857 35.134899 158.09857 28.2729 165.30656 c
21.3939 172.51256 16.1819 174.75256 11.1969 176.13057 c
11.1969 176.13057 12.1609 158.48256 26.5179 150.64456 c
40.8689 142.80156 53.9189 144.55557 60.835899 140.02756 c
67.746902 135.50357 74.0839 130.79257 74.0839 130.79257 c
77.957901 133.24457 l
f
42.895901 193.66156 m
42.895901 193.66156 30.3689 210.07556 15.1869 215.69557 c
15.1869 215.69557 6.5778999 228.63057 11.5599 239.84956 c
11.5599 239.84956 19.662901 234.24457 22.155899 226.14957 c
22.155899 226.14957 10.2569 252.36057 20.232901 267.31958 c
20.232901 267.31958 40.849899 243.59656 39.607899 224.89757 c
39.607899 224.89757 38.9869 237.36057 49.579899 242.96857 c
49.579899 242.96857 58.3069 221.78056 51.4519 204.96156 c
51.4519 204.96156 43.652901 205.75856 42.895901 193.66156 c
f
67.551903 180.45956 m
67.551903 180.45956 67.963898 194.03157 61.155899 201.21657 c
61.155899 201.21657 59.228901 233.02457 73.226898 240.97557 c
73.226898 240.97557 79.2789 232.26357 76.633904 218.65556 c
76.633904 218.65556 83.062897 246.64656 106.1429 247.02657 c
106.1429 247.02657 95.923897 219.79657 85.7089 213.35857 c
85.7089 213.35857 102.7349 232.64757 118.6209 230.75656 c
118.6209 230.75656 109.5419 208.43956 93.6539 205.04257 c
77.763901 201.63957 67.551903 180.45956 67.551903 180.45956 c
f
83.062897 158.13156 m
83.062897 158.13156 91.384903 196.72057 113.7079 202.01357 c
113.7079 202.01357 114.0819 179.70656 101.2179 167.97156 c
101.2179 167.97156 120.5149 181.21356 136.7789 172.88957 c
136.7789 172.88957 127.3239 161.91556 112.9509 159.27156 c
98.569901 156.62056 82.683899 140.35257 90.248901 124.84157 c
90.248901 124.84157 86.466904 131.27257 82.300903 131.65556 c
82.300903 131.65556 81.930901 143.29457 73.748901 147.70456 c
66.682899 151.50757 61.998901 187.24657 83.941902 188.75056 c
83.941902 188.75056 79.656898 171.74956 83.062897 158.13156 c
f
136.7789 196.34456 m
136.7789 196.34456 122.0289 195.58557 115.5989 189.15657 c
115.5989 189.15657 114.4599 179.70656 111.0559 175.91656 c
111.0559 175.91656 120.1389 180.08456 126.1899 178.56357 c
126.1899 178.56357 136.0219 189.15657 136.7789 196.34456 c
f
43.526901 248.42856 m
39.2999 244.20757 35.9729 266.68655 37.8619 272.35556 c
39.745899 278.02655 46.6749 278.01956 52.3409 276.13358 c
58.006901 274.24557 58.637901 263.54156 43.526901 248.42856 c
f
136.71091 404.58157 m
130.0069 414.64557 105.2329 416.54657 92.008904 401.43158 c
78.787903 386.32556 84.455902 373.09958 84.455902 373.09958 c
84.455902 373.09958 95.788902 396.39355 105.8629 386.95258 c
115.9359 377.50656 97.047897 369.94858 83.190903 364.91455 c
69.339897 359.87656 26.960899 334.07956 23.378901 299.43158 c
21.4909 281.17056 32.194901 270.46457 32.194901 270.46457 c
32.194901 270.46457 36.601898 286.20355 51.085899 280.54556 c
51.085899 280.54556 78.784897 328.39856 115.9359 357.99057 c
134.01691 372.38956 151.82491 381.91257 136.71091 404.58157 c
f
117.8299 267.32056 m
103.7289 250.65756 77.526901 250.31656 61.1549 259.13257 c
61.1549 259.13257 62.554901 266.41257 59.8969 271.72458 c
54.859901 281.80157 85.086899 323.35956 112.1579 347.28458 c
139.2309 371.21255 166.7099 385.89557 184.5699 362.39755 c
196.53191 346.65756 182.0529 317.68756 151.8269 314.54056 c
151.8269 314.54056 180.7899 337.21255 162.53191 347.91357 c
144.2699 358.61755 133.56689 312.65356 129.7919 297.53857 c
126.0099 282.42856 124.7509 275.50858 117.8299 267.32056 c
f
143.6429 376.24957 m
143.6429 376.24957 172.6049 431.02856 211.63789 422.21356 c
211.63789 422.21356 216.6759 390.73056 143.6429 376.24957 c
f
103.6189 101.29057 m
103.6189 101.29057 110.0079 97.245567 111.2849 88.727562 c
112.5619 80.212563 125.7659 61.887566 167.51089 52.305565 c
209.2589 42.725567 243.9729 26.747564 260.16391 16.313564 c
280.17389 31.219564 l
284.65689 30.368565 l
284.65689 30.368565 261.2229 9.2855654 259.94791 5.8775649 c
259.94791 5.8775649 241.49989 20.270565 216.9659 30.219564 c
192.4379 40.171566 158.14391 46.989567 157.2959 45.704563 c
156.4379 44.426563 144.72591 29.730564 131.94791 28.027565 c
119.1649 26.324566 120.2299 27.813564 120.2299 27.813564 c
120.2299 27.813564 127.8979 30.586565 127.8979 36.338566 c
127.8979 36.338566 115.9729 22.911566 101.0599 36.123566 c
101.0599 36.123566 110.4339 35.273563 113.6269 42.081566 c
113.6269 42.081566 99.1409 33.989567 84.023903 46.768566 c
84.023903 46.768566 99.3629 47.197563 101.7019 58.056564 c
101.7019 58.056564 77.632896 54.227566 59.314899 64.878563 c
40.996899 75.527565 37.650902 93.826569 37.650902 93.826569 c
37.650902 93.826569 46.498901 88.912567 48.874901 86.382568 c
52.4949 82.551567 55.476898 83.829567 55.476898 83.829567 c
55.476898 83.829567 52.416901 88.592567 47.5979 90.643562 c
39.315899 94.172562 27.856899 106.72456 27.2229 115.67156 c
27.2229 115.67156 41.9249 107.96857 46.9599 103.21356 c
50.794899 99.594566 53.346901 100.23257 53.346901 100.23257 c
53.346901 100.23257 22.930901 125.07356 19.731899 146.58357 c
19.731899 146.58357 49.085899 144.53357 65.492897 113.22356 c
65.492897 113.22356 65.914902 117.69856 63.579899 121.95457 c
61.235901 126.22057 61.331902 130.91057 62.609901 135.38057 c
62.609901 135.38057 79.119904 126.23656 77.617897 105.14957 c
77.617897 105.14957 81.873901 109.40356 79.9729 115.14056 c
77.538902 122.49256 77.393898 128.21756 77.393898 128.21756 c
77.393898 128.21756 85.066902 127.10657 90.382896 118.58556 c
95.714897 110.05856 96.646896 103.98357 95.536903 95.292564 c
94.193901 84.763565 100.4249 81.703568 100.4249 81.703568 c
100.4249 81.703568 101.9169 84.262566 101.2749 88.300568 c
100.6349 92.355568 103.6189 101.29057 103.6189 101.29057 c
f
ep
end
%%Trailer
%%EOF
